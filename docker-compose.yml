version: '3.8'
name: healthcare-microservices
services:
  # Service Registry (Eureka)
  eureka-server:
    build: ./EurekaServer
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # RabbitMQ for messaging
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --requirepass 12345678
    ports:
      - "6380:6379"
    volumes:
      - redis-data:/data
    networks:
      - microservice-network

  # PostgreSQL Databases
  user-service-db:
    image: postgres:14-alpine
    container_name: user-service-db
    environment:
      - POSTGRES_DB=userservicedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    volumes:
      - user-service-data:/var/lib/postgresql/data
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  health-record-service-db:
    image: postgres:14-alpine
    container_name: health-record-service-db
    environment:
      - POSTGRES_DB=healthrecordservicedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"
    volumes:
      - health-record-service-data:/var/lib/postgresql/data
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  notification-service-db:
    image: postgres:14-alpine
    container_name: notification-service-db
    environment:
      - POSTGRES_DB=notificationservicedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5435:5432"
    volumes:
      - notification-service-data:/var/lib/postgresql/data
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  scheduling-service-db:
    image: postgres:14-alpine
    container_name: scheduling-service-db
    environment:
      - POSTGRES_DB=schedulingservicedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5436:5432"
    volumes:
      - scheduling-service-data:/var/lib/postgresql/data
    networks:
      - microservice-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  microservice-network:
    driver: bridge

volumes:
  user-service-data:
  health-record-service-data:
  notification-service-data:
  scheduling-service-data:
  redis-data:
