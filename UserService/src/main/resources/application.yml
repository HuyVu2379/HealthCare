server:
  port: 8081

spring:
  application:
    name: UserService
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/userservicedb}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}

# JWT Configuration
jwt:
  secretKey: ${JWT_SECRET_KEY:defaultSecretKeyForDevelopment12345678901234567890}
  expiration: ${JWT_EXPIRATION:86400000}  # 24 hours in milliseconds
  header: Authorization
  prefix: Bearer
  refresh-token:
    expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days in milliseconds

# Eureka Client Configuration
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8761/eureka/}
  instance:
    prefer-ip-address: true
    hostname: localhost
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# Logging Configuration
logging:
  level:
    org.springframework.security: DEBUG
    fit.iuh.student.userservice: DEBUG
    org.hibernate.SQL: DEBUG

---
# Docker profile - CHỈ dùng khi UserService chạy TRONG Docker
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://user-service-db:5432/userservicedb
    username: postgres
    password: postgres
  rabbitmq:
    host: rabbitmq
    port: 5672
    username: guest
    password: guest

eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    hostname: user-service